{"ast":null,"code":"import _objectSpread from\"/Users/serhiimaistrenko/react/Kapusta-smart-finance/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React from'react';import{useForm}from'react-hook-form';import{yupResolver}from'@hookform/resolvers/yup';import*as yup from'yup';import{useEffect}from'react';import{getSid,getUserBalance}from'Redux/kapustaSlice';import{useDispatch,useSelector}from'react-redux';import{changeBalance,getUser}from'Redux/userOperations';import{ErrorMessage}from'components/Expenses/Form/Inputs/DescriptionInput/DescriptionInput.styled';import{ReportCurrentBalanceWrapper,ReportCurrentBalanceText,ReportCurrentAmountWrapper,ReportCurrentAmount,ReportCurrentConfirmWrapper}from'./ReportBalance.styled';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var schema=yup.object({newBalance:yup.number().min(1).max(1000000000).required('please enter your balance')}).required();export default function ReportBalance(){var dispatch=useDispatch();var sid=useSelector(getSid);var balance=useSelector(getUserBalance);useEffect(function(){if(sid)dispatch(getUser());},[dispatch,sid]);var _useForm=useForm({defaultValues:{newBalance:balance},mode:'onChange',resolver:yupResolver(schema)}),register=_useForm.register,handleSubmit=_useForm.handleSubmit,reset=_useForm.reset,errors=_useForm.formState.errors;var onSubmit=function onSubmit(data){console.log('сабміт');dispatch(changeBalance(data));reset();};var onReadOnlyHandler=function onReadOnlyHandler(){var inputBalance=document.querySelector('.input-balance');if(window.matchMedia('(max-width: 1279.98px)').matches){inputBalance===null||inputBalance===void 0?void 0:inputBalance.setAttribute('readOnly',true);}else{return;}};useEffect(function(){onReadOnlyHandler();},[]);return/*#__PURE__*/_jsxs(ReportCurrentBalanceWrapper,{onSubmit:handleSubmit(onSubmit),children:[/*#__PURE__*/_jsx(ReportCurrentBalanceText,{children:\"Balance:\"}),/*#__PURE__*/_jsxs(ReportCurrentAmountWrapper,{children:[/*#__PURE__*/_jsx(ReportCurrentAmount,_objectSpread(_objectSpread({className:\"input-balance\"},register('newBalance')),{},{name:\"newBalance\",type:\"text\",placeholder:\"\".concat(balance,\".00 UAH\")})),(errors===null||errors===void 0?void 0:errors.newBalance)&&/*#__PURE__*/_jsx(ErrorMessage,{children:'this field is required and must be a number'})]}),/*#__PURE__*/_jsx(ReportCurrentConfirmWrapper,{type:\"submit\",children:\"Confirm\"})]});}","map":{"version":3,"names":["React","useForm","yupResolver","yup","useEffect","getSid","getUserBalance","useDispatch","useSelector","changeBalance","getUser","ErrorMessage","ReportCurrentBalanceWrapper","ReportCurrentBalanceText","ReportCurrentAmountWrapper","ReportCurrentAmount","ReportCurrentConfirmWrapper","schema","object","newBalance","number","min","max","required","ReportBalance","dispatch","sid","balance","defaultValues","mode","resolver","register","handleSubmit","reset","errors","formState","onSubmit","data","console","log","onReadOnlyHandler","inputBalance","document","querySelector","window","matchMedia","matches","setAttribute"],"sources":["/Users/serhiimaistrenko/react/Kapusta-smart-finance/src/components/Report/Balance/ReportBalance.jsx"],"sourcesContent":["import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\n\nimport { useEffect } from 'react';\nimport { getSid, getUserBalance } from 'Redux/kapustaSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeBalance, getUser } from 'Redux/userOperations';\n\nimport { ErrorMessage } from 'components/Expenses/Form/Inputs/DescriptionInput/DescriptionInput.styled';\n\nimport {\n  ReportCurrentBalanceWrapper,\n  ReportCurrentBalanceText,\n  ReportCurrentAmountWrapper,\n  ReportCurrentAmount,\n  ReportCurrentConfirmWrapper,\n} from './ReportBalance.styled';\n\nconst schema = yup\n  .object({\n    newBalance: yup\n      .number()\n      .min(1)\n      .max(1000000000)\n      .required('please enter your balance'),\n  })\n  .required();\n\nexport default function ReportBalance() {\n  const dispatch = useDispatch();\n  const sid = useSelector(getSid);\n  const balance = useSelector(getUserBalance);\n\n  useEffect(() => {\n    if (sid) dispatch(getUser());\n  }, [dispatch, sid]);\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    defaultValues: {\n      newBalance: balance,\n    },\n    mode: 'onChange',\n    resolver: yupResolver(schema),\n  });\n\n  const onSubmit = data => {\n    console.log('сабміт');\n    dispatch(changeBalance(data));\n    reset();\n  };\n\n  const onReadOnlyHandler = () => {\n    const inputBalance = document.querySelector('.input-balance');\n    if (window.matchMedia('(max-width: 1279.98px)').matches) {\n      inputBalance?.setAttribute('readOnly', true);\n    } else {\n      return;\n    }\n  };\n\n  useEffect(() => {\n    onReadOnlyHandler();\n  }, []);\n\n  return (\n    <ReportCurrentBalanceWrapper onSubmit={handleSubmit(onSubmit)}>\n      <ReportCurrentBalanceText>Balance:</ReportCurrentBalanceText>\n      <ReportCurrentAmountWrapper>\n        <ReportCurrentAmount\n          className=\"input-balance\"\n          {...register('newBalance')}\n          name=\"newBalance\"\n          type=\"text\"\n          placeholder={`${balance}.00 UAH`}\n        />\n        {errors?.newBalance && (\n          <ErrorMessage>\n            {'this field is required and must be a number'}\n          </ErrorMessage>\n        )}\n      </ReportCurrentAmountWrapper>\n      <ReportCurrentConfirmWrapper type=\"submit\">\n        Confirm\n      </ReportCurrentConfirmWrapper>\n    </ReportCurrentBalanceWrapper>\n  );\n}\n"],"mappings":"wIAAA,MAAOA,MAAK,KAAM,OAAO,CACzB,OAASC,OAAO,KAAQ,iBAAiB,CACzC,OAASC,WAAW,KAAQ,yBAAyB,CACrD,MAAO,GAAKC,IAAG,KAAM,KAAK,CAE1B,OAASC,SAAS,KAAQ,OAAO,CACjC,OAASC,MAAM,CAAEC,cAAc,KAAQ,oBAAoB,CAC3D,OAASC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CACtD,OAASC,aAAa,CAAEC,OAAO,KAAQ,sBAAsB,CAE7D,OAASC,YAAY,KAAQ,0EAA0E,CAEvG,OACEC,2BAA2B,CAC3BC,wBAAwB,CACxBC,0BAA0B,CAC1BC,mBAAmB,CACnBC,2BAA2B,KACtB,wBAAwB,CAAC,wFAEhC,GAAMC,OAAM,CAAGd,GAAG,CACfe,MAAM,CAAC,CACNC,UAAU,CAAEhB,GAAG,CACZiB,MAAM,EAAE,CACRC,GAAG,CAAC,CAAC,CAAC,CACNC,GAAG,CAAC,UAAU,CAAC,CACfC,QAAQ,CAAC,2BAA2B,CACzC,CAAC,CAAC,CACDA,QAAQ,EAAE,CAEb,cAAe,SAASC,cAAa,EAAG,CACtC,GAAMC,SAAQ,CAAGlB,WAAW,EAAE,CAC9B,GAAMmB,IAAG,CAAGlB,WAAW,CAACH,MAAM,CAAC,CAC/B,GAAMsB,QAAO,CAAGnB,WAAW,CAACF,cAAc,CAAC,CAE3CF,SAAS,CAAC,UAAM,CACd,GAAIsB,GAAG,CAAED,QAAQ,CAACf,OAAO,EAAE,CAAC,CAC9B,CAAC,CAAE,CAACe,QAAQ,CAAEC,GAAG,CAAC,CAAC,CAEnB,aAKIzB,OAAO,CAAC,CACV2B,aAAa,CAAE,CACbT,UAAU,CAAEQ,OACd,CAAC,CACDE,IAAI,CAAE,UAAU,CAChBC,QAAQ,CAAE5B,WAAW,CAACe,MAAM,CAC9B,CAAC,CAAC,CAVAc,QAAQ,UAARA,QAAQ,CACRC,YAAY,UAAZA,YAAY,CACZC,KAAK,UAALA,KAAK,CACQC,MAAM,UAAnBC,SAAS,CAAID,MAAM,CASrB,GAAME,SAAQ,CAAG,QAAXA,SAAQ,CAAGC,IAAI,CAAI,CACvBC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC,CACrBd,QAAQ,CAAChB,aAAa,CAAC4B,IAAI,CAAC,CAAC,CAC7BJ,KAAK,EAAE,CACT,CAAC,CAED,GAAMO,kBAAiB,CAAG,QAApBA,kBAAiB,EAAS,CAC9B,GAAMC,aAAY,CAAGC,QAAQ,CAACC,aAAa,CAAC,gBAAgB,CAAC,CAC7D,GAAIC,MAAM,CAACC,UAAU,CAAC,wBAAwB,CAAC,CAACC,OAAO,CAAE,CACvDL,YAAY,SAAZA,YAAY,iBAAZA,YAAY,CAAEM,YAAY,CAAC,UAAU,CAAE,IAAI,CAAC,CAC9C,CAAC,IAAM,CACL,OACF,CACF,CAAC,CAED3C,SAAS,CAAC,UAAM,CACdoC,iBAAiB,EAAE,CACrB,CAAC,CAAE,EAAE,CAAC,CAEN,mBACE,MAAC,2BAA2B,EAAC,QAAQ,CAAER,YAAY,CAACI,QAAQ,CAAE,wBAC5D,KAAC,wBAAwB,WAAC,UAAQ,EAA2B,cAC7D,MAAC,0BAA0B,yBACzB,KAAC,mBAAmB,8BAClB,SAAS,CAAC,eAAe,EACrBL,QAAQ,CAAC,YAAY,CAAC,MAC1B,IAAI,CAAC,YAAY,CACjB,IAAI,CAAC,MAAM,CACX,WAAW,WAAKJ,OAAO,WAAU,GACjC,CACD,CAAAO,MAAM,SAANA,MAAM,iBAANA,MAAM,CAAEf,UAAU,gBACjB,KAAC,YAAY,WACV,6CAA6C,EAEjD,GAC0B,cAC7B,KAAC,2BAA2B,EAAC,IAAI,CAAC,QAAQ,UAAC,SAE3C,EAA8B,GACF,CAElC"},"metadata":{},"sourceType":"module"}